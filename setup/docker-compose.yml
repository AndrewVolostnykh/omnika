version: '2.2'

services:
  postgres:
    image: postgres:12
    container_name: omnika_postgres
    restart: always
    ports:
      - '5432'
    environment:
      POSTGRES_PASSWORD: 'postgres'
    volumes:
      - ./db-init/:/docker-entrypoint-initdb.d/
      - ./.data/postgres:/var/lib/postgresql/data
  zookeeper:
    image: zookeeper:3.5
    container_name: omnika_zookeeper
    restart: always
    ports:
      - '2181'
      - '8080'
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181
  kafka: # TODO: add scripts for topics creation
    image: wurstmeister/kafka:2.13-2.6.0
    container_name: omnika_kafka
    restart: always
    ports:
      - '9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 268435456
      KAFKA_LOG_RETENTION_MS: 1000000
      KAFKA_LOG_CLEANUP_POLICY: delete
    depends_on:
      - zookeeper

  management-service:
    image: omnika/management:latest
    container_name: omnika_management_service
    restart: always
    ports:
      - '8081'
    env_file: .env
    environment:
      SERVER_PORT: 8081
      DATABASE_URL: jdbc:postgresql://postgres:5432/omnika_management_service
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      SECURITY_TOKEN_LIFETIME: 7200
      SECURITY_REFRESH_TOKEN_LIFETIME: 604800
    depends_on:
      - postgres
      - zookeeper
      - kafka
  messaging-gateway-service:
    image: omnika/messaging-gateway:latest
    container_name: omnika_messaging_gateway_service
    restart: always
    ports:
      - '8082'
    env_file: .env
    environment:
      SERVER_PORT: 8082
      DATABASE_URL: jdbc:postgresql://postgres:5432/omnika_messaging_gateway
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
    depends_on:
      - postgres
      - zookeeper
      - kafka

  telegram-channel-service:
    image: omnika/telegram-channel:latest
    container_name: omnika_telegram_channel_service
    restart: always
    env_file: .env
    depends_on:
      - zookeeper
      - kafka
      - management-service
#  instagram-channel-service:
#    image: omnika/instagram-channel:latest
#    container_name: omnika_instagram_channel_service
#    restart: always
#    env_file: .env
#    depends_on:
#      - zookeeper
#      - kafka
#      - management-service

#  ui:
#    image: omnika/ui:latest
#    container_name: omnika_ui
#    restart: always
#  nginx:
#    image: